package com.dsa.arrays;

/* Juggling Algorithm
    rotate(arr[], d, n)
	  reverse(arr[], 1, d) ;
	  reverse(arr[], d + 1, n);
	  reverse(arr[], 1, n);
*/

public class RotateArraybyN {

	public static void main(String[] args) {
		
		int arr[] = {1,2,3,4,5,6,7,8,9} ;
		int d = 15 ;
		rotateArray(arr, d);
		System.out.print("Rotated Array is : ");
		for(int n : arr){
			System.out.print(" "+ n);
		}
	}
	
	public static void rotateArray(int[] arr , int d) {
		
		if(d == 0) {
			return ;
		}
		int n = arr.length ;
		//In case rotating factor is greater than array length
		d = d % n ;
		
		reverse(arr, 0 , d-1) ;  // reverse first d elements 
		reverse(arr, d, n-1);   // then reverse remaining elements 
		reverse(arr, 0, n-1) ;  // reverse whole array
		
	}

	private static void reverse(int[] arr, int i, int j) {
		
		while(i < j) {
			int temp = arr[i] ;
			arr[i] = arr[j] ;
			arr[j] = temp ;
			i++ ;
			j-- ;
		}
		
	}

}
